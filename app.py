import streamlit as st
if "modul_state" not in st.session_state:
    st.session_state["modul_state"] = 1

# üåê Egys√©ges megjelen√≠t√©s≈± HTML szekci√≥khoz
def render_section(title, icon, color, content_en, content_hu):
    st.markdown(
        f"""
        <div style="background-color: {color};
                    padding:1.5rem;
                    border-radius:0.75rem;
                    margin-bottom:2rem;
                    border: 1px solid #ccc;
                    box-shadow: 0px 3px 8px rgba(0,0,0,0.05);
                    color: #ffffff;">
            <h3>{icon} {title}</h3>
            <p><strong>EN:</strong> {content_en}</p>
            <p><strong>HU:</strong> {content_hu}</p>
        </div>
        """,
        unsafe_allow_html=True
    )

# üíÑ Modern √ºzleti megjelen√©s ‚Äì navy blue h√°tt√©r + vil√°gos tartalom
st.markdown("""
    <style>
        .stApp {
            background-color: #001f3f;
            font-family: 'Segoe UI', sans-serif;
            color: #fffdd0;
        }

        html, body {
            background-color: #001f3f;
            color: #ffffff;
        }

        h1, h2, h3, h4 {
            color: #fffdd0;
        }

        .stButton > button {
            background-color: #2f80ed;
            color: white;
            font-weight: 600;
            border-radius: 0.5rem;
            padding: 0.5rem 1rem;
        }

        .stRadio > div {
            background-color: #003366;
            color: #ffffff;
            padding: 0.75rem;
            border-radius: 0.5rem;
            margin-bottom: 0.5rem;
            border: 1px solid #4d648d;
        }

        .stRadio label {
            color: #fffdd0 !important;
            font-weight: 500;
        }

        .stForm label {
            color: #ffffff !important;
        }

        .stSelectbox > div {
            background-color: #ffffff10;
            color: #ffffff;
        }
    </style>
""", unsafe_allow_html=True)

# Alapbe√°ll√≠t√°sok
st.set_page_config(page_title="üìò RE Vizsgafelk√©sz√≠t≈ë ‚Äì Modul 1", layout="wide")
# Dinamikus fejl√©c √©s n√©zetopci√≥k
if "modul1_completed" not in st.session_state:
    st.session_state["modul1_completed"] = False

if st.session_state["modul_state"] == 1:
    st.title("üìò Introduction and Overview of Requirements Engineering (Modul 1)")
    st.markdown("#### üí° Ismerd meg a Requirements Engineering alapjait ‚Äì angolul √©s magyarul")
    options = ["üìÑ Elm√©leti √°ttekint√©s", "üé¥ Tanul√≥k√°rty√°k", "‚úÖ K√©rd≈ë√≠ves Vizsga"]
    
elif st.session_state["modul_state"] == 2:
    st.title("üìó Fundamental Principles of RE (Modul 2)")
    st.markdown("#### üí° A Requirements Engineering univerz√°lis alapelvei ‚Äì angolul √©s magyarul")
    options = ["üìÑ Elm√©leti √°ttekint√©s", "üé¥ Tanul√≥k√°rty√°k", "‚úÖ K√©rd≈ë√≠ves Vizsga", "üîô Vissza Modul 1-re"]

# Ez a v√°laszt√≥ komponens jelen√≠ti meg a fel√ºletet
view = st.radio("üîç N√©zetv√°laszt√≥", options)

# Visszal√©p√©s lehet≈ës√©ge Modul 1-re
if view == "üîô Vissza Modul 1-re":
    st.info("üîÑ Visszav√°ltott√°l a Modul 1-re.")
    st.session_state["modul_state"] = 1
    st.rerun()

if "go_to_second_block" not in st.session_state:
    st.session_state["go_to_second_block"] = False
if "jump_triggered" not in st.session_state:
    st.session_state["jump_triggered"] = False

if st.button("Ugr√°s a 2. blokkra") and not st.session_state["jump_triggered"]:
    st.session_state["go_to_second_block"] = True
    st.session_state["jump_triggered"] = True
    st.rerun()

# Sz√≠nek √©s ikonok
colors = {
    "1.1": "#fdf8e3",  # halv√°ny s√°rga
    "1.2": "#e6ffe6",  # halv√°ny z√∂ld
    "1.3": "#fff5cc",  # halv√°ny s√°rga
    "1.4": "#f0e6ff",  # halv√°ny lila
    "1.5": "#ffe6e6",  # halv√°ny r√≥zsasz√≠n
    "1.6": "#f2f2f2"   # vil√°gossz√ºrke
}

icons = {
    "1.1": "üìò", "1.2": "üí°", "1.3": "üåç", "1.4": "‚öôÔ∏è", "1.5": "üë§", "1.6": "üéì"
}
# üìò Elm√©leti √°ttekint√©s
if view == "üìÑ Elm√©leti √°ttekint√©s":
    chosen = st.selectbox("V√°lassz alfejezetet:", [
        "1.1 What is Requirements Engineering?",
        "1.2 Why is RE important?",
        "1.3 Where is RE applied?",
        "1.4 How is RE performed?",
        "1.5 Role and Tasks of a Requirements Engineer",
        "1.6 What to Learn about RE"
    ])
    code = chosen[:3]

    if chosen == "1.1 What is Requirements Engineering?":
        render_section(
            chosen, icons[code], "#3d5c3d",
            "Requirements Engineering (RE) is the systematic process of discovering, analyzing, documenting, validating, and managing the requirements of a system. It aims to ensure that the system to be developed meets the desires and needs of its stakeholders. RE distinguishes between functional requirements (what the system should do), quality requirements (how well it should perform), and constraints (limitations on the solution space).",
            "A Requirements Engineering (RE) egy struktur√°lt folyamat, amely mag√°ban foglalja a k√∂vetelm√©nyek felt√°r√°s√°t, elemz√©s√©t, dokument√°l√°s√°t, √©rv√©nyes√≠t√©s√©t √©s kezel√©s√©t. C√©lja, hogy a fejlesztend≈ë rendszer megfeleljen az √©rintettek ig√©nyeinek √©s elv√°r√°sainak. Az RE megk√ºl√∂nb√∂zteti a funkcion√°lis k√∂vetelm√©nyeket (mit kell tennie a rendszernek), a min≈ës√©gi k√∂vetelm√©nyeket (milyen szinten kell teljes√≠tenie), valamint a korl√°toz√°sokat (a megold√°si t√©rre vonatkoz√≥ megszor√≠t√°sok)."
        )

    elif chosen == "1.2 Why is RE important?":
        render_section(
            chosen, icons[code], "#3d5c3d",
            "Adequate RE reduces the risk of developing the wrong system, improves understanding of the problem, supports estimation of effort and cost, and provides a basis for testing. Inadequate RE often leads to missing, unclear, or incorrect requirements due to rushed implementation, poor communication, or lack of RE skills.",
            "A megfelel≈ë RE cs√∂kkenti annak kock√°zat√°t, hogy hib√°s rendszert fejlessz√ºnk, jav√≠tja a probl√©ma meg√©rt√©s√©t, t√°mogatja a r√°ford√≠t√°s √©s k√∂lts√©g becsl√©s√©t, valamint alapot ad a tesztel√©shez. Az el√©gtelen RE gyakran hi√°nyz√≥, hom√°lyos vagy hib√°s k√∂vetelm√©nyekhez vezet, amit siets√©g, kommunik√°ci√≥s probl√©m√°k vagy a RE ismeret√©nek hi√°nya okoz."
        )

    elif chosen == "1.3 Where is RE applied?":
        render_section(
            chosen, icons[code], "#3d5c3d",
            "RE is applicable to any kind of system, especially those involving software, physical components, and organizational elements. Requirements can be categorized as system, stakeholder, user, domain, or business requirements, depending on their origin and perspective.",
            "Az RE b√°rmilyen t√≠pus√∫ rendszerre alkalmazhat√≥, k√ºl√∂n√∂sen olyanokra, amelyek szoftveres, fizikai √©s szervezeti elemeket tartalmaznak. A k√∂vetelm√©nyek lehetnek rendszer-, stakeholder-, felhaszn√°l√≥i-, domain- vagy √ºzleti k√∂vetelm√©nyek, att√≥l f√ºgg≈ëen, hogy honnan sz√°rmaznak √©s milyen n√©z≈ëpontot k√©pviselnek."
        )

    elif chosen == "1.4 How is RE performed?":
        render_section(
            chosen, icons[code], "#3d5c3d",
            "The main RE tasks include elicitation, documentation, validation, and management of requirements. These tasks are supported by tools and must be tailored to the specific context. Conflict resolution and analysis are also part of the elicitation process.",
            "Az RE f≈ë feladatai a k√∂vetelm√©nyek felt√°r√°sa, dokument√°l√°sa, √©rv√©nyes√≠t√©se √©s kezel√©se. Ezeket a feladatokat eszk√∂z√∂k is t√°mogathatj√°k, √©s a konkr√©t k√∂rnyezethez kell igaz√≠tani ≈ëket. A konfliktuskezel√©s √©s elemz√©s szint√©n a felt√°r√°si folyamat r√©sze."
        )

    elif chosen == "1.5 Role and Tasks of a Requirements Engineer":
        render_section(
            chosen, icons[code], "#3d5c3d",
            "A Requirements Engineer is a role (not necessarily a job title) responsible for eliciting, documenting, validating, and managing requirements. They bridge the gap between problems and solutions and often collaborate with stakeholders, developers, and analysts.",
            "A Requirements Engineer egy szerep (nem felt√©tlen√ºl munkak√∂r), aki a k√∂vetelm√©nyek felt√°r√°s√°√©rt, dokument√°l√°s√°√©rt, √©rv√©nyes√≠t√©s√©√©rt √©s kezel√©s√©√©rt felel. ≈ê k√©pezi a hidat a probl√©m√°k √©s a megold√°sok k√∂z√∂tt, √©s gyakran m≈±k√∂dik egy√ºtt √©rintettekkel, fejleszt≈ëkkel √©s elemz≈ëkkel."
        )

    elif chosen == "1.6 What to Learn about RE":
        render_section(
            chosen, icons[code], "#3d5c3d",
            "The CPRE syllabus covers RE principles, documentation techniques, elaboration practices, process configuration, requirements management, and tool support. It provides a foundational skill set for anyone involved in RE.",
            "A CPRE tananyag lefedi az RE alapelveit, dokument√°ci√≥s technik√°it, kibont√°si gyakorlatokat, folyamatkonfigur√°ci√≥t, k√∂vetelm√©nykezel√©st √©s eszk√∂zt√°mogat√°st. Ez egy alapvet≈ë k√©szs√©gk√©szletet biztos√≠t minden RE-ben √©rintett sz√°m√°ra."
        )


# üé¥ Tanul√≥k√°rty√°k
elif view == "üé¥ Tanul√≥k√°rty√°k":
    st.subheader("üß† Tanul√≥k√°rty√°s gyakorl√°s")
    flashcards = {
        "Mi a RE c√©lja?": "A stakeholder-ek ig√©nyeinek meghat√°roz√°sa √©s kezel√©se.",
        "Mi√©rt fontos a RE?": "Cs√∂kkenti a hibakock√°zatot, t√°mogatja a meg√©rt√©st √©s a tesztelhet≈ës√©get.",
        "Hol alkalmazz√°k a RE-t?": "Mindenf√©le rendszern√©l, f≈ëleg szoftverk√∂zpont√∫ √©s komplex rendszerekben.",
        "Hogyan t√∂rt√©nik a RE?": "Felt√°r√°s, dokument√°l√°s, √©rv√©nyes√≠t√©s, kezel√©s ‚Äî testreszabott folyamatban.",
        "Ki a Requirements Engineer?": "Az a szem√©ly, aki a k√∂vetelm√©nyeket √∂sszegy≈±jti, kezeli, √©s k√∂zvet√≠t a probl√©m√°k √©s megold√°sok k√∂z√∂tt.",
        "Mit kell megtanulni RE-b≈ël?": "Elveket, dokument√°l√°si m√≥dszereket, kibont√°st, folyamatokat, menedzsmentet, eszk√∂z√∂ket."
    }

    for question, answer in flashcards.items():
        with st.expander(f"‚ùì {question}"):
            st.write(f"‚úÖ {answer}")
# ‚úÖ K√©rd≈ë√≠ves Vizsga
elif view  == "‚úÖ K√©rd≈ë√≠ves Vizsga":
    st.subheader("‚úÖ K√©rd≈ë√≠ves vizsga ‚Äì Modul 1")
    score = 0
    total = 6

    with st.form("modul1_quiz"):
        st.markdown("### ‚ùì V√°laszolj az al√°bbi k√©rd√©sekre:")

        q1 = st.radio("1Ô∏è‚É£ Mi a Requirements Engineering els≈ëdleges c√©lja?", [
            "Rendszerek tesztel√©se √©s karbantart√°sa",
            "Stakeholder-ek ig√©nyeinek meghat√°roz√°sa √©s kezel√©se",
            "Projektk√∂lts√©gek kisz√°m√≠t√°sa"
        ], key="q1")

        q2 = st.radio("2Ô∏è‚É£ Mi jellemz≈ë a j√≥ RE-re?", [
            "Csak a fejleszt√©s v√©g√©n kezd≈ëdik",
            "Minimaliz√°lja a dokument√°ci√≥t",
            "Cs√∂kkenti a hibakock√°zatot, seg√≠ti a meg√©rt√©st √©s a becsl√©st"
        ], key="q2")

        q3 = st.radio("3Ô∏è‚É£ Milyen rendszerekre alkalmazhat√≥ RE?", [
            "Csak webes alkalmaz√°sokra",
            "Mindenf√©le rendszerre, k√ºl√∂n√∂sen komplex szoftveres rendszerekre",
            "Kiz√°r√≥lag √ºzleti szoftverekre"
        ], key="q3")

        q4 = st.radio("4Ô∏è‚É£ Melyik NEM tartozik az RE f≈ë tev√©kenys√©gei k√∂z√©?", [
            "K√∂vetelm√©nyek felt√°r√°sa",
            "K√≥doptimaliz√°l√°s",
            "K√∂vetelm√©nyek √©rv√©nyes√≠t√©se"
        ], key="q4")

        q5 = st.radio("5Ô∏è‚É£ Milyen szerepet t√∂lt be a Requirements Engineer?", [
            "Hardvertechnikus",
            "A probl√©m√°k √©s megold√°sok k√∂z√∂tti kapcsolatot teremti meg",
            "Marketing asszisztens"
        ], key="q5")

        q6 = st.radio("6Ô∏è‚É£ Mit √∂lel fel az RE alapszint≈± tananyaga?", [
            "Projektmenedzsment √©s er≈ëforr√°s-allok√°ci√≥",
            "Tesztel√©si strat√©gi√°k √©s hibakeres√©s",
            "RE alapelvek, dokument√°l√°s, kibont√°s, folyamatok, menedzsment, eszk√∂z√∂k"
        ], key="q6")

        submitted = st.form_submit_button("üìä Eredm√©ny megtekint√©se")

    if submitted:
        if q1 == "Stakeholder-ek ig√©nyeinek meghat√°roz√°sa √©s kezel√©se": score += 1
        if q2 == "Cs√∂kkenti a hibakock√°zatot, seg√≠ti a meg√©rt√©st √©s a becsl√©st": score += 1
        if q3 == "Mindenf√©le rendszerre, k√ºl√∂n√∂sen komplex szoftveres rendszerekre": score += 1
        if q4 == "K√≥doptimaliz√°l√°s": score += 1
        if q5 == "A probl√©m√°k √©s megold√°sok k√∂z√∂tti kapcsolatot teremti meg": score += 1
        if q6 == "RE alapelvek, dokument√°l√°s, kibont√°s, folyamatok, menedzsment, eszk√∂z√∂k": score += 1

        percent = round((score / total) * 100)
        st.subheader(f"üéØ Eredm√©nyed: {score}/{total} ‚Äì {percent}%")
        
        if score >= 5:
            st.success("‚úÖ Teljes√≠tetted az 1. modult ‚Äî feloldva a k√∂vetkez≈ë szint!")
            st.session_state["modul1_completed"] = True
            st.session_state["modul_state"] = 2
            st.rerun()

        else:
            st.warning("üîí A modul 2 csak akkor el√©rhet≈ë, ha legal√°bb 5 helyes v√°laszod van.")
        
        if percent == 100:
            st.success("üåü Gratul√°lunk! Teljes√≠tetted a Modul 1 √∂sszes k√©rd√©s√©t hib√°tlanul!")
            st.balloons()
            st.markdown("### üéì **Modul 1 teljes√≠tve!**\n\nKiv√°l√≥ alapokat szerezt√©l a k√∂vetkez≈ë t√©mak√∂rh√∂z.")
        elif percent >= 80:
            st.success("üéâ Nagyon j√≥! M√°r csak egy kis finomhangol√°s van h√°tra.")
        elif percent >= 60:
            st.warning("üôÇ J√≥ √∫ton j√°rsz, de √©rdemes m√©g egy kicsit √°tn√©zni a tananyagot.")
        else:
            st.error("üòÖ Ne cs√ºggedj! A tanul√≥k√°rty√°k seg√≠thetnek az ism√©tl√©sben.")

        st.markdown("---")
        st.markdown("üëâ Tipp: Pr√≥b√°ld ki √∫jra a tanul√≥k√°rty√°kat vagy n√©zd √°t az elm√©leti √∂sszefoglal√≥t, miel≈ëtt tov√°bbl√©psz a 2. modulra.")
# üìó Modul 2 ‚Äì csak akkor v√°laszthat√≥, ha el≈ëz≈ë modul teljes√ºlt
elif st.session_state["modul_state"] == 2:
    if view == "üìÑ Elm√©leti √°ttekint√©s":
        st.subheader("üìó Modul 2 ‚Äì Elm√©leti √°ttekint√©s")
        st.markdown("‚úÖ Ez a szakasz r√©szletesen bemutatja az RE kilenc alapelv√©t √©s azok gyakorlati alkalmaz√°s√°t.")
        # Els≈ë blokk
        render_section("Harmadik blokk", "üéØ", "#cc3344", "Third block EN", "Harmadik blokk HU")
        render_section("2.1 Overview of Principles", "üìó", "#3d5c3d", "Requirements Engineering is governed by nine universal principles: value-orientation, stakeholder orientation, shared understanding, context awareness, separation of concerns between problems, requirements and solutions, validation, evolution, innovation, and systematic work. These principles apply across RE tasks, regardless of domain or method.", "A Requirements Engineering kilenc univerz√°lis alapelv ment√©n m≈±k√∂dik: √©rt√©korient√°lts√°g, stakeholder-k√∂zpont√∫s√°g, k√∂z√∂s meg√©rt√©s, kontextus-tudatoss√°g, a probl√©m√°k, k√∂vetelm√©nyek √©s megold√°sok sz√©tv√°laszt√°sa, √©rv√©nyes√≠t√©s, v√°ltoz√°skezel√©s, innov√°ci√≥, valamint rendszerszeml√©let≈± √©s fegyelmezett munka.")
        render_section("2.2 Stakeholder needs and shared understanding", "üë•", "#3d5c3d", "Successful RE is grounded in understanding and satisfying stakeholder needs. It establishes shared understanding among stakeholders, developers and Requirements Engineers, through explicit documentation and trust-building practices.", "A sikeres RE alapja a stakeholderek ig√©nyeinek m√©ly meg√©rt√©se √©s kiel√©g√≠t√©se. A k√∂z√∂s meg√©rt√©st kifejezett dokument√°ci√≥n, visszacsatol√°son √©s a bizalom kialak√≠t√°s√°n kereszt√ºl val√≥s√≠tja meg a stakeholderek, fejleszt≈ëk √©s RE-szakemberek k√∂z√∂tt.")
        render_section("2.3 Context and system boundaries", "üåê", "#3d5c3d","RE considers the system in its context. Understanding what is inside and outside the system boundary is critical. External actors, regulations and assumptions about the environment must be captured.", "Az RE a rendszert annak k√∂rnyezet√©ben √©rtelmezi. Fontos tiszt√°zni, mi esik a rendszer hat√°rain bel√ºl √©s k√≠v√ºl. A k√ºls≈ë szerepl≈ëk, szab√°lyoz√°sok √©s a kontextusra vonatkoz√≥ felt√©telez√©sek r√∂gz√≠t√©se kulcsfontoss√°g√∫.")
        render_section("2.4 Managing change and fostering innovation", "‚ôªÔ∏è", "#3d5c3d", "Requirements evolve. RE must embrace change while maintaining traceability and consistency. Beyond fulfilling explicit needs, RE should strive to surprise and delight users through innovative solutions.", "A k√∂vetelm√©nyek v√°ltoznak. Az RE-nek fel kell k√©sz√ºlnie a v√°ltoz√°sok kezel√©s√©re, mik√∂zben biztos√≠tja a nyomon k√∂vethet≈ës√©get √©s a konzisztenci√°t. Az RE c√©lja nem csup√°n a kifejezett ig√©nyek teljes√≠t√©se, hanem az is, hogy innovat√≠v megold√°sokkal √∂r√∂met szerezzen a felhaszn√°l√≥knak.")
        render_section("2.5 Disciplined and adaptive RE practices", "üõ†Ô∏è", "#3d5c3d", "RE requires systematic analysis and continuous validation.", "A RE m√≥dszeres elemz√©st √©s folyamatos valid√°l√°st ig√©nyel.")
       
    elif view == "üé¥ Tanul√≥k√°rty√°k":
        st.subheader("üìó Modul 2 ‚Äì Tanul√≥k√°rty√°k")
        st.markdown("üí° K√©rd√©s‚Äìv√°lasz alap√∫ seg√©dlet a kilenc alapelvhez. (Ide j√∂het majd a k√°rtyalista.)")

    elif view == "‚úÖ K√©rd≈ë√≠ves Vizsga":
        st.subheader("üìó Modul 2 ‚Äì K√©rd≈ë√≠v")
        st.markdown("üß™ A m√°sodik modulhoz tartoz√≥ k√©rd≈ë√≠v itt jelenik meg.")
        # Ide ker√ºlhet a m√°sodik k√©rd≈ë√≠v logik√°ja k√©s≈ëbb

    elif view == "üîô Vissza Modul 1-re":
        st.info("üîÑ Visszav√°ltott√°l az els≈ë modulra.")
        st.session_state["modul_state"] = 1
        st.rerun()
        

